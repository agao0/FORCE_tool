#pragma once

#define _USE_MATH_DEFINES
#include <cmath>

void computeEndEffectorTransformation(double* transformation, const double* position){
    const double x0 = sin(position[5]);
    const double x1 = cos(position[3]);
    const double x2 = cos(position[0]);
    const double x3 = (1.0/2.0)*x2 + 1.0/2.0;
    const double x4 = 0.317*M_PI;
    const double x5 = 0.73611111111111116*M_PI;
    const double x6 = cos(x5);
    const double x7 = 2*x6;
    const double x8 = x7*cos(x4);
    const double x9 = sin(x4);
    const double x10 = sin(x5);
    const double x11 = M_SQRT2;
    const double x12 = x10*x11;
    const double x13 = x12*x9;
    const double x14 = (1.0/2.0)*sin(position[1]);
    const double x15 = x14*(x13 - x8);
    const double x16 = (1.0/2.0)*x2 - 1.0/2.0;
    const double x17 = x10*x16;
    const double x18 = (1.0/2.0)*sin(position[0]);
    const double x19 = x11*x18;
    const double x20 = x19*x6;
    const double x21 = x17 - x20;
    const double x22 = x11*x9;
    const double x23 = x14*x22;
    const double x24 = -x16*x6;
    const double x25 = x12*x18;
    const double x26 = x24 - x25;
    const double x27 = x9*x9;
    const double x28 = 0.183*M_PI;
    const double x29 = x12*cos(x28) - x7*sin(x28)*x12*cos(x28) - x7*sin(x28);
    const double x30 = cos(position[1]) - 1;
    const double x31 = (1.0/4.0)*x30;
    const double x32 = x31*(2*x27 + x29) + 1;
    const double x33 = x15*x3 - x21*x23 + x26*x32;
    const double x34 = sin(position[3]);
    const double x35 = cos(position[2]);
    const double x36 = (1.0/2.0)*x27*x30 + 1;
    const double x37 = -x13 + x8;
    const double x38 = x22*x31*x37;
    const double x39 = x21*x36 + x23*x26 + x3*x38;
    const double x40 = sin(position[2]);
    const double x41 = x29*x31 + 1;
    const double x42 = x14*x37;
    const double x43 = x21*x38 + x26*x42 + x3*x41;
    const double x44 = x35*x39 - x40*x43;
    const double x45 = x34*x44;
    const double x46 = x1*x33 - x45;
    const double x47 = cos(position[5]);
    const double x48 = cos(position[4]);
    const double x49 = x35*x43 + x39*x40;
    const double x50 = sin(position[4]);
    const double x51 = x1*x44 + x33*x34;
    const double x52 = x48*x49 + x50*x51;
    const double x53 = cos(position[6]);
    const double x54 = x48*x51 - x49*x50;
    const double x55 = sin(position[6]);
    const double x56 = x0*x52;
    const double x57 = x46*x47 - x56;
    const double x58 = x54*x55;
    const double x59 = 0.30359999999999998*x1 - 0.30359999999999998;
    const double x60 = 0.58030000000000004*x47 - 0.58030000000000004;
    const double x61 = 0.58030000000000004*x53 - 0.58030000000000004;
    const double x62 = x16*(x6*x6 + 1) + 1;
    const double x63 = x17 + x20;
    const double x64 = x17*x6;
    const double x65 = -x19 + x64;
    const double x66 = x15*x63 - x23*x62 + x32*x65;
    const double x67 = x23*x65 + x36*x62 + x38*x63;
    const double x68 = x38*x62 + x41*x63 + x42*x65;
    const double x69 = x35*x67 - x40*x68;
    const double x70 = x34*x69;
    const double x71 = x1*x66 - x70;
    const double x72 = x35*x68 + x40*x67;
    const double x73 = x1*x69 + x34*x66;
    const double x74 = x48*x72 + x50*x73;
    const double x75 = x48*x73 - x50*x72;
    const double x76 = x0*x74;
    const double x77 = x47*x71 - x76;
    const double x78 = x55*x75;
    const double x79 = x19 + x64;
    const double x80 = x24 + x25;
    const double x81 = x16*(x10*x10 + 1) + 1;
    const double x82 = x15*x80 - x23*x79 + x32*x81;
    const double x83 = x23*x81 + x36*x79 + x38*x80;
    const double x84 = x38*x79 + x41*x80 + x42*x81;
    const double x85 = x35*x83 - x40*x84;
    const double x86 = x34*x85;
    const double x87 = x1*x82 - x86;
    const double x88 = x35*x84 + x40*x83;
    const double x89 = x1*x85 + x34*x82;
    const double x90 = x48*x88 + x50*x89;
    const double x91 = x48*x89 - x50*x88;
    const double x92 = x0*x90;
    const double x93 = x47*x87 - x92;
    const double x94 = x55*x91;

    transformation[0] = x0*x46 + x47*x52;
    transformation[1] = x53*x54 + x55*x57;
    transformation[2] = x53*x57 - x58;
    transformation[3] = x33*x59 - 0.30359999999999998*x45 + x46*x60 - 0.58030000000000004*x56 + x57*x61 - 0.58030000000000004*x58;
    transformation[4] = x0*x71 + x47*x74;
    transformation[5] = x53*x75 + x55*x77;
    transformation[6] = x53*x77 - x78;
    transformation[7] = x59*x66 + x60*x71 + x61*x77 - 0.30359999999999998*x70 - 0.58030000000000004*x76 - 0.58030000000000004*x78;
    transformation[8] = x0*x87 + x47*x90;
    transformation[9] = x53*x91 + x55*x93;
    transformation[10] = x53*x93 - x94;
    transformation[11] = x59*x82 + x60*x87 + x61*x93 - 0.30359999999999998*x86 - 0.58030000000000004*x92 - 0.58030000000000004*x94;
    transformation[12] = 0;
    transformation[13] = 0;
    transformation[14] = 0;
    transformation[15] = 1;
}