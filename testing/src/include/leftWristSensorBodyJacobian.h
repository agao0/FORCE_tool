// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: BodyJacobian
 *
 * Args:
 *     joint_angles: Matrix71
 *
 * Outputs:
 *     res: Matrix67
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 7> Leftwristsensorbodyjacobian(
    const Eigen::Matrix<Scalar, 7, 1>& joint_angles) {
  // Total ops: 736

  // Input arrays

  // Intermediate terms (194)
  const Scalar _tmp0 = 1 - std::cos(joint_angles(0, 0));
  const Scalar _tmp1 = Scalar(0.337794913398) * _tmp0;
  const Scalar _tmp2 = std::sin(joint_angles(0, 0));
  const Scalar _tmp3 = Scalar(0.52133399999999996) * _tmp2;
  const Scalar _tmp4 = _tmp1 - _tmp3;
  const Scalar _tmp5 = std::sin(joint_angles(1, 0));
  const Scalar _tmp6 = Scalar(0.80488899999999997) * _tmp5;
  const Scalar _tmp7 = 1 - Scalar(0.77178944900500002) * _tmp0;
  const Scalar _tmp8 = 1 - std::cos(joint_angles(1, 0));
  const Scalar _tmp9 = 1 - Scalar(1.000000719797) * _tmp8;
  const Scalar _tmp10 = Scalar(0.249048550476) * _tmp0;
  const Scalar _tmp11 = Scalar(0.70710700000000004) * _tmp2;
  const Scalar _tmp12 = _tmp10 + _tmp11;
  const Scalar _tmp13 = Scalar(0.59342600000000001) * _tmp5;
  const Scalar _tmp14 = -_tmp12 * _tmp13 - _tmp4 * _tmp6 + _tmp7 * _tmp9;
  const Scalar _tmp15 = std::cos(joint_angles(3, 0));
  const Scalar _tmp16 = 1 - _tmp15;
  const Scalar _tmp17 = Scalar(0.30359999999999998) * _tmp16;
  const Scalar _tmp18 = 1 - Scalar(0.64784630232100004) * _tmp8;
  const Scalar _tmp19 = Scalar(0.47764205971399998) * _tmp8;
  const Scalar _tmp20 = -_tmp12 * _tmp19 + _tmp18 * _tmp4 + _tmp6 * _tmp7;
  const Scalar _tmp21 = std::sin(joint_angles(2, 0));
  const Scalar _tmp22 = std::cos(joint_angles(2, 0));
  const Scalar _tmp23 = 1 - Scalar(0.35215441747600001) * _tmp8;
  const Scalar _tmp24 = _tmp12 * _tmp23 + _tmp13 * _tmp7 - _tmp19 * _tmp4;
  const Scalar _tmp25 = _tmp20 * _tmp21 + _tmp22 * _tmp24;
  const Scalar _tmp26 = std::sin(joint_angles(3, 0));
  const Scalar _tmp27 = _tmp14 * _tmp15 - _tmp25 * _tmp26;
  const Scalar _tmp28 = std::cos(joint_angles(5, 0));
  const Scalar _tmp29 = Scalar(0.58030000000000004) - Scalar(0.58030000000000004) * _tmp28;
  const Scalar _tmp30 = _tmp14 * _tmp26 + _tmp15 * _tmp25;
  const Scalar _tmp31 = std::sin(joint_angles(4, 0));
  const Scalar _tmp32 = _tmp20 * _tmp22 - _tmp21 * _tmp24;
  const Scalar _tmp33 = std::cos(joint_angles(4, 0));
  const Scalar _tmp34 = -_tmp30 * _tmp31 + _tmp32 * _tmp33;
  const Scalar _tmp35 = std::sin(joint_angles(5, 0));
  const Scalar _tmp36 = -_tmp27 * _tmp35 + _tmp28 * _tmp34;
  const Scalar _tmp37 = _tmp27 * _tmp28 + _tmp34 * _tmp35;
  const Scalar _tmp38 = std::sin(joint_angles(6, 0));
  const Scalar _tmp39 = _tmp30 * _tmp33 + _tmp31 * _tmp32;
  const Scalar _tmp40 = std::cos(joint_angles(6, 0));
  const Scalar _tmp41 = _tmp37 * _tmp38 + _tmp39 * _tmp40;
  const Scalar _tmp42 = Scalar(0.30359999999999998) * _tmp26;
  const Scalar _tmp43 = 1 - _tmp40;
  const Scalar _tmp44 = Scalar(0.58030000000000004) * _tmp43;
  const Scalar _tmp45 = Scalar(0.58030000000000004) * _tmp35;
  const Scalar _tmp46 = _tmp38 * _tmp39;
  const Scalar _tmp47 = _tmp37 * _tmp40 - _tmp46;
  const Scalar _tmp48 = -_tmp14 * _tmp17 - _tmp25 * _tmp42 - _tmp27 * _tmp29 + _tmp34 * _tmp45 -
                        Scalar(0.040910000000000002) * _tmp36 - _tmp37 * _tmp44 +
                        Scalar(0.023210000000000001) * _tmp41 -
                        Scalar(0.58030000000000004) * _tmp46 - Scalar(0.63) * _tmp47;
  const Scalar _tmp49 = 1 - Scalar(0.499999805352) * _tmp0;
  const Scalar _tmp50 = Scalar(0.36863892073799998) * _tmp0;
  const Scalar _tmp51 = Scalar(0.47771400000000003) * _tmp2;
  const Scalar _tmp52 = _tmp50 - _tmp51;
  const Scalar _tmp53 = _tmp1 + _tmp3;
  const Scalar _tmp54 = _tmp13 * _tmp53 - _tmp19 * _tmp49 + _tmp23 * _tmp52;
  const Scalar _tmp55 = _tmp18 * _tmp49 - _tmp19 * _tmp52 + _tmp53 * _tmp6;
  const Scalar _tmp56 = _tmp21 * _tmp55 + _tmp22 * _tmp54;
  const Scalar _tmp57 = -_tmp13 * _tmp52 - _tmp49 * _tmp6 + _tmp53 * _tmp9;
  const Scalar _tmp58 = _tmp15 * _tmp56 + _tmp26 * _tmp57;
  const Scalar _tmp59 = -_tmp21 * _tmp54 + _tmp22 * _tmp55;
  const Scalar _tmp60 = -_tmp31 * _tmp58 + _tmp33 * _tmp59;
  const Scalar _tmp61 = _tmp15 * _tmp57 - _tmp26 * _tmp56;
  const Scalar _tmp62 = _tmp28 * _tmp60 - _tmp35 * _tmp61;
  const Scalar _tmp63 = _tmp28 * _tmp61 + _tmp35 * _tmp60;
  const Scalar _tmp64 = _tmp31 * _tmp59 + _tmp33 * _tmp58;
  const Scalar _tmp65 = _tmp38 * _tmp63 + _tmp40 * _tmp64;
  const Scalar _tmp66 = _tmp38 * _tmp64;
  const Scalar _tmp67 = _tmp40 * _tmp63 - _tmp66;
  const Scalar _tmp68 = -_tmp17 * _tmp57 - _tmp29 * _tmp61 - _tmp42 * _tmp56 - _tmp44 * _tmp63 +
                        _tmp45 * _tmp60 - Scalar(0.040910000000000002) * _tmp62 +
                        Scalar(0.023210000000000001) * _tmp65 -
                        Scalar(0.58030000000000004) * _tmp66 - Scalar(0.63) * _tmp67;
  const Scalar _tmp69 = _tmp50 + _tmp51;
  const Scalar _tmp70 = 1 - Scalar(0.728210975245) * _tmp0;
  const Scalar _tmp71 = _tmp10 - _tmp11;
  const Scalar _tmp72 = _tmp18 * _tmp69 - _tmp19 * _tmp70 + _tmp6 * _tmp71;
  const Scalar _tmp73 = _tmp13 * _tmp71 - _tmp19 * _tmp69 + _tmp23 * _tmp70;
  const Scalar _tmp74 = -_tmp21 * _tmp73 + _tmp22 * _tmp72;
  const Scalar _tmp75 = _tmp21 * _tmp72 + _tmp22 * _tmp73;
  const Scalar _tmp76 = -_tmp13 * _tmp70 - _tmp6 * _tmp69 + _tmp71 * _tmp9;
  const Scalar _tmp77 = _tmp15 * _tmp75 + _tmp26 * _tmp76;
  const Scalar _tmp78 = -_tmp31 * _tmp77 + _tmp33 * _tmp74;
  const Scalar _tmp79 = _tmp35 * _tmp78;
  const Scalar _tmp80 = _tmp26 * _tmp75;
  const Scalar _tmp81 = _tmp15 * _tmp76 - _tmp80;
  const Scalar _tmp82 = _tmp31 * _tmp74 + _tmp33 * _tmp77;
  const Scalar _tmp83 = _tmp38 * _tmp82;
  const Scalar _tmp84 = _tmp28 * _tmp81 + _tmp79;
  const Scalar _tmp85 = _tmp40 * _tmp84 - _tmp83;
  const Scalar _tmp86 = _tmp28 * _tmp78 - _tmp35 * _tmp81;
  const Scalar _tmp87 = _tmp38 * _tmp84 + _tmp40 * _tmp82;
  const Scalar _tmp88 =
      -_tmp17 * _tmp76 - _tmp29 * _tmp81 - _tmp44 * _tmp84 + Scalar(0.58030000000000004) * _tmp79 -
      Scalar(0.30359999999999998) * _tmp80 - Scalar(0.58030000000000004) * _tmp83 -
      Scalar(0.63) * _tmp85 - Scalar(0.040910000000000002) * _tmp86 +
      Scalar(0.023210000000000001) * _tmp87;
  const Scalar _tmp89 = -_tmp19 * _tmp22;
  const Scalar _tmp90 = -_tmp21 * _tmp23 + _tmp89;
  const Scalar _tmp91 = _tmp19 * _tmp21;
  const Scalar _tmp92 = _tmp22 * _tmp23 - _tmp91;
  const Scalar _tmp93 = -_tmp13 * _tmp26 + _tmp15 * _tmp92;
  const Scalar _tmp94 = -_tmp31 * _tmp93 + _tmp33 * _tmp90;
  const Scalar _tmp95 = _tmp26 * _tmp92;
  const Scalar _tmp96 = -_tmp13 * _tmp15 - _tmp95;
  const Scalar _tmp97 = _tmp28 * _tmp94 - _tmp35 * _tmp96;
  const Scalar _tmp98 = _tmp13 * _tmp22 + _tmp21 * _tmp6;
  const Scalar _tmp99 = _tmp15 * _tmp98 + _tmp26 * _tmp9;
  const Scalar _tmp100 = -_tmp13 * _tmp21 + _tmp22 * _tmp6;
  const Scalar _tmp101 = _tmp100 * _tmp33 - _tmp31 * _tmp99;
  const Scalar _tmp102 = _tmp101 * _tmp35;
  const Scalar _tmp103 = _tmp26 * _tmp98;
  const Scalar _tmp104 = -_tmp103 + _tmp15 * _tmp9;
  const Scalar _tmp105 = _tmp102 + _tmp104 * _tmp28;
  const Scalar _tmp106 = _tmp100 * _tmp31 + _tmp33 * _tmp99;
  const Scalar _tmp107 = _tmp105 * _tmp38 + _tmp106 * _tmp40;
  const Scalar _tmp108 = _tmp101 * _tmp28 - _tmp104 * _tmp35;
  const Scalar _tmp109 = _tmp106 * _tmp38;
  const Scalar _tmp110 = _tmp105 * _tmp40 - _tmp109;
  const Scalar _tmp111 =
      Scalar(0.58030000000000004) * _tmp102 - Scalar(0.30359999999999998) * _tmp103 -
      _tmp104 * _tmp29 - _tmp105 * _tmp44 + Scalar(0.023210000000000001) * _tmp107 -
      Scalar(0.040910000000000002) * _tmp108 - Scalar(0.58030000000000004) * _tmp109 -
      Scalar(0.63) * _tmp110 - _tmp17 * _tmp9;
  const Scalar _tmp112 = _tmp31 * _tmp90 + _tmp33 * _tmp93;
  const Scalar _tmp113 = _tmp112 * _tmp38;
  const Scalar _tmp114 = _tmp28 * _tmp96 + _tmp35 * _tmp94;
  const Scalar _tmp115 = -_tmp113 + _tmp114 * _tmp40;
  const Scalar _tmp116 = _tmp112 * _tmp40 + _tmp114 * _tmp38;
  const Scalar _tmp117 = _tmp16 * _tmp5;
  const Scalar _tmp118 = -Scalar(0.58030000000000004) * _tmp113 - _tmp114 * _tmp44 -
                         Scalar(0.63) * _tmp115 + Scalar(0.023210000000000001) * _tmp116 +
                         Scalar(0.1801641336) * _tmp117 - _tmp29 * _tmp96 + _tmp45 * _tmp94 -
                         Scalar(0.30359999999999998) * _tmp95 -
                         Scalar(0.040910000000000002) * _tmp97;
  const Scalar _tmp119 = _tmp18 * _tmp21 + _tmp89;
  const Scalar _tmp120 = _tmp119 * _tmp26;
  const Scalar _tmp121 = _tmp18 * _tmp22 + _tmp91;
  const Scalar _tmp122 = _tmp119 * _tmp15 - _tmp26 * _tmp6;
  const Scalar _tmp123 = _tmp121 * _tmp33 - _tmp122 * _tmp31;
  const Scalar _tmp124 = _tmp123 * _tmp35;
  const Scalar _tmp125 = -_tmp120 - _tmp15 * _tmp6;
  const Scalar _tmp126 = _tmp123 * _tmp28 - _tmp125 * _tmp35;
  const Scalar _tmp127 = _tmp121 * _tmp31 + _tmp122 * _tmp33;
  const Scalar _tmp128 = Scalar(0.58030000000000004) * _tmp38;
  const Scalar _tmp129 = _tmp124 + _tmp125 * _tmp28;
  const Scalar _tmp130 = _tmp127 * _tmp40 + _tmp129 * _tmp38;
  const Scalar _tmp131 = -_tmp127 * _tmp38 + _tmp129 * _tmp40;
  const Scalar _tmp132 =
      Scalar(0.24436430040000001) * _tmp117 - Scalar(0.30359999999999998) * _tmp120 +
      Scalar(0.58030000000000004) * _tmp124 - _tmp125 * _tmp29 -
      Scalar(0.040910000000000002) * _tmp126 - _tmp127 * _tmp128 - _tmp129 * _tmp44 +
      Scalar(0.023210000000000001) * _tmp130 - Scalar(0.63) * _tmp131;
  const Scalar _tmp133 = _tmp26 * _tmp28;
  const Scalar _tmp134 = _tmp22 * _tmp33;
  const Scalar _tmp135 = _tmp21 * _tmp31;
  const Scalar _tmp136 = _tmp134 - _tmp135 * _tmp15;
  const Scalar _tmp137 = _tmp136 * _tmp35;
  const Scalar _tmp138 = -_tmp133 * _tmp21 + _tmp137;
  const Scalar _tmp139 = _tmp22 * _tmp31;
  const Scalar _tmp140 = _tmp21 * _tmp33;
  const Scalar _tmp141 = _tmp139 + _tmp140 * _tmp15;
  const Scalar _tmp142 = _tmp138 * _tmp38 + _tmp141 * _tmp40;
  const Scalar _tmp143 = _tmp26 * _tmp29;
  const Scalar _tmp144 = _tmp26 * _tmp35;
  const Scalar _tmp145 = _tmp136 * _tmp28 + _tmp144 * _tmp21;
  const Scalar _tmp146 = _tmp138 * _tmp40 - _tmp141 * _tmp38;
  const Scalar _tmp147 = -_tmp128 * _tmp141 + Scalar(0.58030000000000004) * _tmp137 -
                         _tmp138 * _tmp44 + Scalar(0.023210000000000001) * _tmp142 +
                         _tmp143 * _tmp21 - Scalar(0.040910000000000002) * _tmp145 -
                         Scalar(0.63) * _tmp146 - _tmp21 * _tmp42;
  const Scalar _tmp148 = -_tmp139 * _tmp15 - _tmp140;
  const Scalar _tmp149 = _tmp144 * _tmp22 + _tmp148 * _tmp28;
  const Scalar _tmp150 = _tmp148 * _tmp35;
  const Scalar _tmp151 = -_tmp133 * _tmp22 + _tmp150;
  const Scalar _tmp152 = _tmp134 * _tmp15 - _tmp135;
  const Scalar _tmp153 = _tmp151 * _tmp38 + _tmp152 * _tmp40;
  const Scalar _tmp154 = _tmp151 * _tmp40 - _tmp152 * _tmp38;
  const Scalar _tmp155 =
      -_tmp128 * _tmp152 + _tmp143 * _tmp22 - Scalar(0.040910000000000002) * _tmp149 +
      Scalar(0.58030000000000004) * _tmp150 - _tmp151 * _tmp44 +
      Scalar(0.023210000000000001) * _tmp153 - Scalar(0.63) * _tmp154 - _tmp22 * _tmp42;
  const Scalar _tmp156 = _tmp15 * _tmp35;
  const Scalar _tmp157 = -_tmp133 * _tmp31 - _tmp156;
  const Scalar _tmp158 = _tmp33 * _tmp40;
  const Scalar _tmp159 = _tmp15 * _tmp28;
  const Scalar _tmp160 = -_tmp144 * _tmp31 + _tmp159;
  const Scalar _tmp161 = _tmp158 * _tmp26 + _tmp160 * _tmp38;
  const Scalar _tmp162 = _tmp33 * _tmp38;
  const Scalar _tmp163 = _tmp160 * _tmp40 - _tmp162 * _tmp26;
  const Scalar _tmp164 = _tmp144 - _tmp159 * _tmp31;
  const Scalar _tmp165 = _tmp31 * _tmp45;
  const Scalar _tmp166 = _tmp128 * _tmp33;
  const Scalar _tmp167 = -_tmp15 * _tmp29 - Scalar(0.040910000000000002) * _tmp157 -
                         _tmp160 * _tmp44 + Scalar(0.023210000000000001) * _tmp161 -
                         Scalar(0.63) * _tmp163 - _tmp165 * _tmp26 - _tmp166 * _tmp26 - _tmp17;
  const Scalar _tmp168 = -_tmp133 - _tmp156 * _tmp31;
  const Scalar _tmp169 = -_tmp15 * _tmp162 + _tmp168 * _tmp40;
  const Scalar _tmp170 = _tmp15 * _tmp158 + _tmp168 * _tmp38;
  const Scalar _tmp171 = _tmp143 - _tmp15 * _tmp165 - _tmp15 * _tmp166 -
                         Scalar(0.040910000000000002) * _tmp164 - _tmp168 * _tmp44 -
                         Scalar(0.63) * _tmp169 + Scalar(0.023210000000000001) * _tmp170 - _tmp42;
  const Scalar _tmp172 = _tmp28 * _tmp33;
  const Scalar _tmp173 = _tmp31 * _tmp40;
  const Scalar _tmp174 = _tmp162 * _tmp35 + _tmp173;
  const Scalar _tmp175 = _tmp31 * _tmp38;
  const Scalar _tmp176 = _tmp158 * _tmp35 - _tmp175;
  const Scalar _tmp177 = _tmp33 * _tmp45;
  const Scalar _tmp178 = -_tmp128 * _tmp31 - Scalar(0.040910000000000002) * _tmp172 +
                         Scalar(0.023210000000000001) * _tmp174 - Scalar(0.63) * _tmp176 -
                         _tmp177 * _tmp43 + _tmp177;
  const Scalar _tmp179 = -_tmp162 - _tmp173 * _tmp35;
  const Scalar _tmp180 = Scalar(0.040910000000000002) * _tmp28;
  const Scalar _tmp181 = _tmp158 - _tmp175 * _tmp35;
  const Scalar _tmp182 = _tmp165 * _tmp43 - _tmp165 - _tmp166 - Scalar(0.63) * _tmp179 +
                         _tmp180 * _tmp31 + Scalar(0.023210000000000001) * _tmp181;
  const Scalar _tmp183 = _tmp28 * _tmp38;
  const Scalar _tmp184 = _tmp28 * _tmp40;
  const Scalar _tmp185 = Scalar(0.58030000000000004) * _tmp28;
  const Scalar _tmp186 = Scalar(0.023210000000000001) * _tmp183 - Scalar(0.63) * _tmp184 -
                         _tmp185 * _tmp43 - _tmp29 + Scalar(0.040910000000000002) * _tmp35;
  const Scalar _tmp187 = Scalar(0.023210000000000001) * _tmp38;
  const Scalar _tmp188 = Scalar(0.63) * _tmp40;
  const Scalar _tmp189 = -_tmp180 + _tmp187 * _tmp35 - _tmp188 * _tmp35 - _tmp43 * _tmp45 + _tmp45;
  const Scalar _tmp190 = _tmp186 * _tmp35;
  const Scalar _tmp191 = Scalar(0.58030000000000004) * _tmp40;
  const Scalar _tmp192 =
      Scalar(0.049700000000000001) * _tmp38 + Scalar(0.023210000000000001) * _tmp40;
  const Scalar _tmp193 = _tmp187 - _tmp188 - _tmp44;

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 7> _res;

  _res(0, 0) = -Scalar(0.52133399999999996) * _tmp36 * _tmp68 +
               Scalar(0.70710700000000004) * _tmp36 * _tmp88 +
               Scalar(0.52133399999999996) * _tmp48 * _tmp62 -
               Scalar(0.70710700000000004) * _tmp48 * _tmp86 -
               Scalar(0.47771400000000003) * _tmp62 * _tmp88 +
               Scalar(0.47771400000000003) * _tmp68 * _tmp86;
  _res(1, 0) = -Scalar(0.52133399999999996) * _tmp41 * _tmp68 +
               Scalar(0.70710700000000004) * _tmp41 * _tmp88 +
               Scalar(0.52133399999999996) * _tmp48 * _tmp65 -
               Scalar(0.70710700000000004) * _tmp48 * _tmp87 -
               Scalar(0.47771400000000003) * _tmp65 * _tmp88 +
               Scalar(0.47771400000000003) * _tmp68 * _tmp87;
  _res(2, 0) = -Scalar(0.52133399999999996) * _tmp47 * _tmp68 +
               Scalar(0.70710700000000004) * _tmp47 * _tmp88 +
               Scalar(0.52133399999999996) * _tmp48 * _tmp67 -
               Scalar(0.70710700000000004) * _tmp48 * _tmp85 -
               Scalar(0.47771400000000003) * _tmp67 * _tmp88 +
               Scalar(0.47771400000000003) * _tmp68 * _tmp85;
  _res(3, 0) = Scalar(0.47771400000000003) * _tmp36 + Scalar(0.70710700000000004) * _tmp62 +
               Scalar(0.52133399999999996) * _tmp86;
  _res(4, 0) = Scalar(0.47771400000000003) * _tmp41 + Scalar(0.70710700000000004) * _tmp65 +
               Scalar(0.52133399999999996) * _tmp87;
  _res(5, 0) = Scalar(0.47771400000000003) * _tmp47 + Scalar(0.70710700000000004) * _tmp67 +
               Scalar(0.52133399999999996) * _tmp85;
  _res(0, 1) = Scalar(0.59342600000000001) * _tmp108 * _tmp118 +
               Scalar(0.80488899999999997) * _tmp108 * _tmp132 -
               Scalar(0.80488899999999997) * _tmp111 * _tmp126 -
               Scalar(0.59342600000000001) * _tmp111 * _tmp97;
  _res(1, 1) = Scalar(0.59342600000000001) * _tmp107 * _tmp118 +
               Scalar(0.80488899999999997) * _tmp107 * _tmp132 -
               Scalar(0.59342600000000001) * _tmp111 * _tmp116 -
               Scalar(0.80488899999999997) * _tmp111 * _tmp130;
  _res(2, 1) = Scalar(0.59342600000000001) * _tmp110 * _tmp118 +
               Scalar(0.80488899999999997) * _tmp110 * _tmp132 -
               Scalar(0.59342600000000001) * _tmp111 * _tmp115 -
               Scalar(0.80488899999999997) * _tmp111 * _tmp131;
  _res(3, 1) = Scalar(0.59342600000000001) * _tmp126 - Scalar(0.80488899999999997) * _tmp97;
  _res(4, 1) = -Scalar(0.80488899999999997) * _tmp116 + Scalar(0.59342600000000001) * _tmp130;
  _res(5, 1) = -Scalar(0.80488899999999997) * _tmp115 + Scalar(0.59342600000000001) * _tmp131;
  _res(0, 2) = _tmp145 * _tmp155 - _tmp147 * _tmp149;
  _res(1, 2) = _tmp142 * _tmp155 - _tmp147 * _tmp153;
  _res(2, 2) = _tmp146 * _tmp155 - _tmp147 * _tmp154;
  _res(3, 2) = -_tmp157;
  _res(4, 2) = -_tmp161;
  _res(5, 2) = -_tmp163;
  _res(0, 3) = _tmp157 * _tmp171 - _tmp164 * _tmp167 - Scalar(0.30359999999999998) * _tmp164;
  _res(1, 3) = _tmp161 * _tmp171 - _tmp167 * _tmp170 - Scalar(0.30359999999999998) * _tmp170;
  _res(2, 3) = _tmp163 * _tmp171 - _tmp167 * _tmp169 - Scalar(0.30359999999999998) * _tmp169;
  _res(3, 3) = _tmp172;
  _res(4, 3) = _tmp174;
  _res(5, 3) = _tmp176;
  _res(0, 4) = _tmp172 * _tmp182 + _tmp178 * _tmp28 * _tmp31;
  _res(1, 4) = _tmp174 * _tmp182 - _tmp178 * _tmp181;
  _res(2, 4) = _tmp176 * _tmp182 - _tmp178 * _tmp179;
  _res(3, 4) = _tmp35;
  _res(4, 4) = -_tmp183;
  _res(5, 4) = -_tmp184;
  _res(0, 5) = _tmp185 + _tmp186 * _tmp28 + _tmp189 * _tmp35;
  _res(1, 5) = -_tmp183 * _tmp189 + _tmp190 * _tmp38 + _tmp38 * _tmp45;
  _res(2, 5) = -_tmp184 * _tmp189 + _tmp190 * _tmp40 + _tmp191 * _tmp35;
  _res(3, 5) = 0;
  _res(4, 5) = _tmp40;
  _res(5, 5) = -_tmp38;
  _res(0, 6) = 0;
  _res(1, 6) = -_tmp191 + _tmp192 * _tmp38 - _tmp193 * _tmp40;
  _res(2, 6) = _tmp128 + _tmp192 * _tmp40 + _tmp193 * _tmp38;
  _res(3, 6) = 1;
  _res(4, 6) = 0;
  _res(5, 6) = 0;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
